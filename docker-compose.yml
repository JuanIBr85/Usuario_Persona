
  services:

    auth-service:
      build: ./auth-service
      ports:
        - "5000:5000"
      env_file:
        - ./auth-service/.env
      environment:
        - COMPONENT_SERVICE_HOST=component-service
        - REDIS_HOST=redis
        - POSTGRES_HOST=auth-db
        #- MAIL_SERVER=mailpit
      volumes:
        - ./auth-service:/app
        - ./auth-service/auth_data:/app/auth_data
      depends_on:
        auth-db:
          condition: service_healthy

    auth-db:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      restart: unless-stopped
      shm_size: 128mb
      ports:
        - 5432:5432
      environment:
        - POSTGRES_USER=usuario
        - POSTGRES_PASSWORD=pass
        - POSTGRES_DB=auth_db
      healthcheck:
        #se hace un chequeo para que la db inicie antes que el servicio auth
        # test es un comando de docker, se indica usar cmd con pg_isready(herramienta de postgres)
        #le indica -U para que utilice el usuario para comprobar conexion
        #-h indica el nombre del host
        #-p indica el puerto que estas usando
        test: ["CMD", "pg_isready", "-U", "usuario", "-h", "auth-db", "-p", "5432"]
        interval: 5s
        timeout: 5s
        retries: 5

    adminer:
      image: adminer
      restart: unless-stopped
      ports:
        - 8080:8080


    persona-backend:
      build: ./persona-service/backend
      ports:
        - "5001:5001"
      env_file:
        - ./persona-service/backend/.env
      environment:
        - COMPONENT_SERVICE_HOST=component-service
        - MYSQL_HOST=mysql
        #- MAIL_SERVER=mailpit
      volumes:
        - ./persona-service/backend:/app
        - ./persona-service/backend/persona.db:/app/persona.db

    persona-frontend:
      build: ./persona-service/frontend
      ports:
        - "5173:5173"
      env_file:
        - ./persona-service/frontend/.env

    component-service:
      build: ./component-services
      ports:
        - "5002:5002"
      env_file:
        - ./component-services/.env
      volumes:
        - ./component-services:/app
      environment:
        - SERVICES_CONFIG_FILE=services-docker.json
        - REDIS_HOST=redis
      depends_on:
        - auth-service
        - persona-backend

    redis:
      image: redis:latest
      container_name: redis-dev
      ports:
        - "6379:6379"


    mysql:
      image: mysql:5.7
      container_name: mysql-persona
      restart: unless-stopped
      environment:
        MYSQL_ROOT_PASSWORD: rootpass
        MYSQL_DATABASE: persona_db
        MYSQL_USER: persona_user
        MYSQL_PASSWORD: persona_pass
      ports:
        - "3306:3306"  # El 3307 es el puerto en tu m√°quina host (no pisa XAMPP en 3306)
      volumes:
        - mysql_data:/var/lib/mysql

    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: phpmyadmin
      restart: unless-stopped
      ports:
      - "8080:80"
      environment:
        PMA_HOST: mysql
        PMA_PORT: 3306
      depends_on:
      - mysql    

    #servicio-adicional:
    #  build: ./servicio-adicional-ejemplo
    #  ports:
    #    - "5003:5003"
    #  volumes:
    #    - ./servicio-adicional-ejemplo:/app
    #  environment:
    #    - COMPONENT_SERVICE_HOST=component-service

    #alternativa a mailtrap en local!!!
    #mailpit:
    #  image: axllent/mailpit:latest
    #  ports:
    #    - "1025:1025"  # SMTP
    #    - "8025:8025"  # Web UI

  volumes:
    mysql_data:
    postgres_data: