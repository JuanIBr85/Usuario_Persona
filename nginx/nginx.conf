events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuración de logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Configuración básica
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server {
        listen 80;
        server_name localhost;

        # Ruta para el frontend - /web
        location /web {
            # Elimina /web del path antes de enviar al frontend
            rewrite ^/web/(.*) /$1 break;
            proxy_pass http://persona-frontend:5173;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Para desarrollo con Hot Reload
            proxy_set_header Accept-Encoding "";
            proxy_redirect off;
        }

        # Ruta exacta para /web (sin barra final)
        location = /web {
            return 301 /web/;
        }

        # Ruta para el frontend - /web
        location /auth {
            # Elimina /web del path antes de enviar al frontend
            rewrite ^/auth/(.*) /$1 break;
            proxy_pass http://persona-frontend:5173/auth/login;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Para desarrollo con Hot Reload
            proxy_set_header Accept-Encoding "";
            proxy_redirect off;
        }

        # Ruta exacta para /web (sin barra final)
        location = /web {
            return 301 /web/;
        }

        # Ruta para la API - /api
        location /api {
            # Elimina /api del path antes de enviar al component-service
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://component-service:5002;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type application/json;
        }

        # Página principal - redirect a /web
        location = / {
            return 301 /web/;
        }

        # Manejo de errores
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 "Página no encontrada";
        }
        
        location = /50x.html {
            internal;
            return 500 "Error interno del servidor";
        }
    }
}