#Generar certificados https(ssl)
# 1 - Se debe comentar todo el bloque de certificados
# 2 - Apagar nginx (no bajar)
# 3 - Encender nginx
# 4 - Entrar en el shell del contenedor de nginx
# 5 - Ejecutar el script renew.sh por cada subdominio >> (sh ./renew.sh)
# 6 - Descomentar todo el bloque de certificados
# 7 - Apagar nginx y volverlo a encender

server {    
    server_name admin.creus.gniglio.com.ar;
    
    #listen 80;

    # Comentar todo este bloque cuando se genere el certificado ssl 
    # y descomentar cuando ya se haya generado
    include /etc/nginx/snippets/ssl_common.conf;
    #====================================================================

    #La ruta base de los archivos html
    root /var/www/admin;

    #La ubicacion del index
    location / {
        #$uri $uri/ para react routes pueda funcionar
        try_files $uri $uri/ /index.html;
    }

    #Aplica un cache a todo el contenido estatido durante un mes
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1M;
        add_header Cache-Control "public, immutable";
    }
}

server {    
    server_name web.creus.gniglio.com.ar;
    
    #listen 80;

    # Comentar todo este bloque cuando se genere el certificado ssl 
    # y descomentar cuando ya se haya generado
    include /etc/nginx/snippets/ssl_common.conf;
    #====================================================================

    #La ruta base de los archivos html
    root /var/www/cms_creus;

    #La ubicacion del index
    location / {
        #$uri $uri/ para react routes pueda funcionar
        try_files $uri $uri/ /index.html;
    }

    #Aplica un cache a todo el contenido estatido durante un mes
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1M;
        add_header Cache-Control "public, immutable";
    }
}

server {    
    server_name propuestas.creus.gniglio.com.ar;
    
    #listen 80;

    # Comentar todo este bloque cuando se genere el certificado ssl 
    # y descomentar cuando ya se haya generado
    include /etc/nginx/snippets/ssl_common.conf;
    #====================================================================

    #La ruta base de los archivos html
    root /var/www/web_creus;

    #La ubicacion del index
    location / {
        #$uri $uri/ para react routes pueda funcionar
        try_files $uri $uri/ /index.html;
    }

    #Aplica un cache a todo el contenido estatido durante un mes
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1M;
        add_header Cache-Control "public, immutable";
    }
}

server {    
    server_name api.creus.gniglio.com.ar;
    # Comentar todo este bloque cuando se genere el certificado ssl 
    # y descomentar cuando ya se haya generado
    include /etc/nginx/snippets/ssl_common.conf;
    #====================================================================

    #Aplico la configuracion del proxy
    include /etc/nginx/snippets/proxy_common.conf;
    proxy_redirect off;
    
    #location de la api gateway(componentes)
    location /api {
        proxy_pass http://component-service:5002/api;
    }

    location /api/creus/api/cms/imagenes/archivo {
        if ($request_method != GET) {
            # Si no es GET, redirige internamente a la ruta /api normal
            rewrite ^/api/creus/api/cms/imagenes/archivo$ /api/creus/api/cms/imagenes/archivo last;
        }
        
        proxy_pass http://api-creus:5004/api/cms/imagenes/archivo;
        expires 1h;
        add_header Cache-Control "public, immutable, max-age=3600";
        #Aplico la configuracion de cors faltante
        include /etc/nginx/snippets/cors_common.conf;
    }


    location /api/creus/api/archivos/archivo/ {
        if ($request_method != GET) {
            # Si no es GET, redirige internamente a la ruta /api normal
            rewrite ^/api/creus/api/archivos/archivo/(.*)$ /api/creus/api/archivos/archivo/$1 last;
        }
        proxy_pass http://api-creus:5004/api/archivos/archivo/;
        expires 1h;
        add_header Cache-Control "public, immutable, max-age=3600";
        #Aplico la configuracion de cors faltante
        include /etc/nginx/snippets/cors_common.conf;
    }

    location /api/creus/api/archivos/get/ {
        if ($request_method != GET) {
            # Si no es GET, redirige internamente a la ruta /api normal
            rewrite ^/api/creus/api/archivos/get/(.*)$ /api/creus/api/archivos/get/$1 last;
        }
        proxy_pass http://api-creus:5004/api/archivos/get/;
        expires 1h;
        add_header Cache-Control "public, immutable, max-age=3600";
        
        #Aplico la configuracion de cors faltante
        include /etc/nginx/snippets/cors_common.conf;
    }

}

